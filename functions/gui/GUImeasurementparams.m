%function G = GUImeasurementparams(G)
% function h = GUImeasurementparams(C)
function h = GUImeasurementparams(C)
% dialog to get measurement parameters

h = figure(...
    'Name','Measurement Parameters',...
    'Units','normalized',...
    'NumberTitle','off',...
    'MenuBar', 'none',...
    'Toolbar', 'none',...
    'Resize','off',...
    'OuterPosition', [0.2,0.25,0.6,0.5]);

o = uipanel('Parent',h, ...
    'Title','Parameters',...
    'Position',[.5,.6,.45,.35]);

tf = uicontrol(...
    o,...
    'Style', 'text',...
    'HorizontalAlignment','left',...
    'String', 'Interframe time (FT+Exposure) [ms]',...
    'units', 'normalized',...
    'Position', [.05,.65,.75,.2]);

f = uicontrol(...
    o,...
    'Style', 'edit',...
    'String', C.Parent.FrameTime,...
    'units', 'normalized',...
    'Position', [.8,.65,.15,.2]);

ta = uicontrol(...
    o,...
    'Style', 'text',...
    'HorizontalAlignment','left',...
    'String', ['ALEX sequence',char(10),'(''1''=off; ex. ''12'' for ''ABABAB...'')'],...
    'units', 'normalized',...
    'Position', [.05,.32,.75,.3]);

a = uicontrol(...
    o,...
    'Style', 'edit',...
    'String', '1',...
    'units', 'normalized',...
    'Position', [.8,.45,.15,.2]);

% ts = uicontrol(...
%     o,...
%     'Style', 'text',...
%     'HorizontalAlignment','left',...
%     'String', 'ALEX: Select ex. with max. contrast:',...
%     'units', 'normalized',...
%     'Position', [.05,.4,.9,.15]);

s = uicontrol(...
    o,...
    'Style', 'slider',...
    'Min',1,'Max',numel(unique(a.String))+1,'SliderStep',[1,1],...
    'Value',1,...
    'units','normalized',...
    'Visible', 'on',...
    'Position',[.05,.3,.9,.15]);


tc = uicontrol(...
    o,...
    'Style', 'text',...
    'HorizontalAlignment','left',...
    'String', 'Delete 1st frame',...
    'units', 'normalized',...
    'Position', [.05,.05,.75,.25]);

c = uicontrol(...
    o,...
    'Style', 'checkbox',...
    'units', 'normalized',...
    'Value', 1,...
    'Position', [.8,.05,.15,.25]);

% cumulated image
ci = uipanel(...
    'Parent',h, ...
    'Title','Cumulated image',...
    'Position',[0.5,0.2,0.45,.4],...
    'Units','normalized');

t1 = uicontrol(...
    'Parent',ci, ...
    'Style','text',...
    'HorizontalAlignment','left',...
   	'String','First frame (1)',...
    'Units','normalized',...
    'Position',[0.05,0.7,0.35,0.2]);

s1 = uicontrol(...
    'Parent',ci, ...
    'Style','slider',...
    'Min',1,'Max',size(C.RawData,3)-1,'Value',1,...
    'Units','normalized',...
    'Position',[0.4,0.7,0.55,0.2]);

min = get(s1,'Min');
max = get(s1,'Max');
set(s1,'SliderStep',(1/(max-min))*[(max-min)/10,1]);

t2 = uicontrol(...
    'Parent',ci, ...
    'Style','text',...
    'HorizontalAlignment','left',...
   	'String',['Window size (',num2str(size(C.RawData,3)-1),' frames)'],...
    'Units','normalized',...
    'Position',[0.05,0.4,0.35,0.2]);

s2 = uicontrol(...
    'Parent',ci, ...
    'Style','slider',...
    'Min',1,'Max',size(C.RawData,3),'Value',size(C.RawData,3)-1,...
    'Units','normalized',...
    'Position',[0.4,0.4,0.55,0.2]);

min = get(s2,'Min');
max = get(s2,'Max');
set(s2,'SliderStep',(1/(max-min))*[(max-min)/10,1]);

% Extraction Method
bg = uibuttongroup(...
    ci, ...
    'Title', 'Method',...
    'Units', 'normalized',...
    'Position', [.05,.02,0.9,.30]);

rb1 = uicontrol(...
    bg,...
    'Style','radiobutton',...
    'String', 'Sum',...
    'Units', 'normalized',...
    'Position',[0.1,0,0.2,1]);

rb2 = uicontrol(...
    bg,...
    'Style','radiobutton',...
    'String', 'Max',...
    'Units', 'normalized',...
    'Position',[0.35,0,0.2,1]);

rb3 = uicontrol(...
    bg,...
    'Style','radiobutton',...
    'String', 'Weighted Mean',...
    'Enable','off',...
    'Units', 'normalized',...
    'Position',[0.6,0,0.4,1]);



pc = uipanel('Parent',h, ...
    'Title','Detection Color',...
    'Position',[.5,.05,.45,.15]);

col = {'B','G','R','IR'};
for j=1:4
col{j} = uicontrol(...
    pc,...
    'Style', 'pushbutton',...
    'units', 'normalized',...
    'String', col{j},...
    'FontWeight', 'bold',...
    'FontSize', 12,...
    'ForegroundColor', 'w',...
    'BackgroundColor', C.Parent.GUI.ChannelColors{j},...
    'Position', [(j-1)*.25,0,.25,1],...
    'Callback', {@load, f , s, a, c ,s1, s2, t1, t2, bg,C});
end

P = uipanel('Parent',h, ...
    'Title','Preview',...
    'Position',[.05,.05,.45,.9]);

j = axes(...
    'Parent', P, ...
    'Position',[.03,.02,.94,.97],...
    'YDir','reverse',...
    'XTick',[],'YTick',[],...
    'XLabel',[],'YLabel',[],...
    'box','off',...
    'PlotBoxAspectRatio',  [1,1,1],...
    'NextPlot','replacechildren');
 

s.Callback = {@alex_slider,j,c,C};
a.Callback = {@alexchanged,s};
c.Callback = {@checkbox_cb,j,s,C};
s1.Callback = {@firstImage,t1,s2,t2,C};
s2.Callback = {@windowSize,t2};
checkbox_cb(c,[],j,s,C);
alexchanged(a,[],s);
j.XLim = [1,size(C.RawData(:,:,1),2)]; j.YLim = [1,size(C.RawData(:,:,1),1)];

end

%% CALLBACKS
function alexchanged(a,~,s)
s.Value = s.Min;
s.Max = numel(unique(a.String));

if s.Max == 1
    s.Visible = 'off';
    s.SliderStep = [1,1];
else
    s.Visible = 'on';
    s.SliderStep = [1/(s.Max-s.Min),1/(s.Max-s.Min)];
end
end

function alex_slider(s, ~, i, c, C)
s.Value = round(s.Value);
imagesc(C.RawData(:,:,c.Value+s.Value),'Parent', i);
C.ALEXID = s.Value;
end

function checkbox_cb(c,~,i, s,C)
if size(C.RawData,3) > c.Value+s.Value
    imagesc(C.RawData(:,:,c.Value+s.Value),'Parent', i);
else
    c.Value = 0;
    imagesc(C.RawData(:,:,s.Value),'Parent', i);
end
end

function load(hObj, ~ ,f , s, a, c , s1, s2, t1, t2, bg, C)

wb = msgbox({'Preparing load...','Please wait'});

if c.Value && size(C.RawData, 3) > 1
    % delete first frame
    C.RawData = C.RawData(:,:,2:end);
end

% store selection parameters in channel objects
C.firstFrame_slider = [s1.Min,s1.Max,s1.Value];
C.windowSize_slider = [s2.Min,s2.Max,s2.Value];
C.method_mode = bg.SelectedObject.String;
C.ChannelColor = hObj.String(1);
C.ChannelColorIndex = find(strcmp([C.Parent.GUI.ChannelColorsText],C.ChannelColor));
C.Parent.ALEXnumberofchannels = numel(unique(a.String));
C.Parent.FrameTime = str2double(f.String);

if ~max(strcmpi(C.Parent.ALEXorder,C.Parent.GUI.ChannelColorsText))
    C.Parent.ALEXorder = hObj.String(1);
end
C.Parent.ALEXsequence = repmat(C.Parent.ALEXorder,1,ceil(size(C.RawData, 3)/numel(C.Parent.ALEXorder)));
C.Parent.ALEXsequence = C.Parent.ALEXsequence(1:size(C.RawData,3));

% generate cumulated image for particle selection based  on selection of best suited excitation for localization
firstFrame = round(s1.Value);
windowSize = round(s2.Value);
mode = bg.SelectedObject.String;

C.Cumulated = cumIMG(C.RawData,C.Parent.ALEXsequence, C.Parent.ALEXorder(s.Value),firstFrame,windowSize,mode);

%firstFrame,windowSize,mode);

C.ContrastThreshold = [min(C.Cumulated(:)),max(C.Cumulated(:))];
delete(hObj.Parent.Parent); % close dialog

close(wb);
end

function firstImage(obj,~,t1,s2,t2,C)
set(t1,'String',...
    ['First frame (',sprintf('%.0f',obj.Value),')']);

new_max = size(C.RawData,3) - obj.Value;

set(s2,'Max',new_max);

if s2.Value > new_max
    set(s2,'Value',new_max);
    if new_max == 1
        set(t2,'String',['Window size (1 frame)']);
    else
        set(t2,'String',['Window size (',sprintf('%.0f',s2.Value),' frames)']);
    end
    min = get(s2,'Min');
    max = get(s2,'Max');
    set(s2,'SliderStep',(1/(max-min))*[ceil((max-min)/10),1]);
else
    s2.Value = round((s2.Max-s2.Min)/2);
    
    set(t2,'String',['Window size (',sprintf('%.0f',s2.Value),' frames)']);
    min = get(s2,'Min');
    max = get(s2,'Max');
    set(s2,'SliderStep',(1/(max-min))*[ceil((max-min)/10),1]);
end

end

function windowSize(obj,~,t2)

set(obj,'Value',round(obj.Value));

if obj.Value >= 1
    set(t2,'String',...
        ['Window size (',sprintf('%.0f',obj.Value),' frames)']);
else
    set(obj,'String','Window size (1 frame)');
end
end
